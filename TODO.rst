modern-form-utils TODO
=======================

General Cleanup
~~~~~~~~~~~~~~~

- ‚úÖ Update all code to Python 3.8+ syntax (no more `__future__` or `six`).
- ‚úÖ Refactor deprecated imports (e.g. `MIDDLEWARE_CLASSES`, `render_to_string`).
- ‚úÖ Ensure compatibility with Django 4.x and 5.x.
- ‚úÖ Rename template paths and tags from `form_utils` to `modern_form_utils`.
- ‚úÖ Move JS files under modern naming convention.

ClearableFileField Behavior
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Django special-cases `FileField` in `BaseForm._clean_fields` and `BoundField.as_widget()`:

- This causes inconsistencies when redisplaying `ClearableFileField`, which is based on `MultiValueField`.
- Unlike `FileField`, it doesn't retain its value on bound redisplay because the initial data is not re-injected.

üõ† Possible Workarounds:
- Add explicit initial-data handling to `ClearableFileField`'s widget.
- Patch Django internals via mixin or monkey-patch (not ideal).
- Accept this as a known behavior with a documented warning.

Future Enhancements
~~~~~~~~~~~~~~~~~~~

- ‚è≥ Support for async form rendering (for upcoming Django features).
- ‚è≥ Rewrite `autosize.js` to avoid jQuery dependency (move to vanilla JS or Alpine).
- ‚è≥ Add Tailwind-compatible form template variants.
- ‚è≥ Optional support for HTMX integration on dynamic forms.
- ‚è≥ Add Sphinx docs and publish to ReadTheDocs.

Tests
~~~~~

- ‚úÖ Add tests for `BetterForm`, `fieldsets`, and `row_attrs`.
- ‚úÖ Add test coverage for `ClearableFileField`, `ImageWidget`, `AutoResizeTextarea`.
- ‚è≥ Add Django admin integration tests using `AdminSite`.
- ‚è≥ Integrate GitHub Actions for CI testing across Django/Python versions.

Packaging
~~~~~~~~~

- ‚úÖ Prepare for PyPI release as `modern-form-utils`.
- ‚úÖ Add README, LICENSE, and long description for PyPI.
- ‚è≥ Create `setup.cfg` and/or `pyproject.toml`.
- ‚è≥ Add wheel and source distribution scripts.

